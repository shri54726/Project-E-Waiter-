package com.ewaiter.dao;

import com.ewaiter.dto.Customer;
import com.ewaiter.dto.User;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Repository;

@Repository
public class UserRepositoryImple implements UserRepository {
	
	@Autowired
	private JdbcTemplate jdbctemp;
	
	
	public  int login(User user)
	{

		String sql = "select * from user where user_name=? and password=?";
		User myuser = (User)jdbctemp.queryForObject(sql,new Object[] {user.getUser_name(),user.getPassword()},new UserRowMapper());
		boolean test = false;		
				test = myuser.getPassword().equals(user.getPassword()) && myuser.getUser_name().equals(user.getUser_name());
		if(test)
		{
			if(myuser.getUser_type_id()==1)
				return 1;
			if(myuser.getUser_type_id()==2)
				return 2;
			else
				return 3;
		}
		else
			return 0;
		
	}

	@Override
	public boolean register(User user) {
		if(user.getName().equals(null)||user.getPassword().equals(null)||user.getName().equals(null)|| user.getSalary()==0||user.getUser_type_id()==0)
			return false;
		
		String sql = "insert into user(user_name,password,name,salary,user_type_id)values(?,?,?,?,?)";
		int records = jdbctemp.update(sql,new Object[] {user.getUser_name(),user.getPassword(),user.getName(),user.getSalary(),user.getUser_type_id()});
		if(records!=0)
			return true;
		else
			return false;
	}

	@Override
	public boolean custLoginRepo(Customer customer) {
		
		if(customer.getName().equals("")||(customer.getTable_id()==0)||customer.getMobile_no().equals(""))
			return false;
		String sql = "insert into customer (name,table_id,mobile_no) values(?,?,?)";
		int records = jdbctemp.update(sql,new Object[] {customer.getName(),customer.getTable_id(),customer.getMobile_no()});
		if(records!=0)
			return true;
		else
			return false;
	}

	@Override
	public List<User> findAll() {
		String sql = "SELECT * FROM user";
        List<User> li = jdbctemp.query(sql,new UserRowMapper());
		return li;
	}

	@Override
	public void removeUser(int id) {

		    String sql="delete from user where user_id=?";  
		    jdbctemp.update(sql, id );
	}

	@Override
	public void editUser(int id) {
		
		String sql = "select * from user where user_id=?";
		User myuser = (User)jdbctemp.queryForObject(sql,new Object[] {id},new UserRowMapper());
		String sql="update user set user_name=?,password =?,name=?,salary=?,user_type-Id=? where id=?";  
		jdbctemp.update(sql,myuser.getUser_name(),myuser.getPassword(),myuser.getName(),myuser.getSalary(),myuser.getUser_type_id());
	}
}
